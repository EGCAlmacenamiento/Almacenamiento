package domain;


import java.util.ArrayList;
import java.util.Collection;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Entity;
import javax.persistence.OneToMany;
import javax.validation.Valid;

import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.URL;

@Entity
@Access(AccessType.PROPERTY)
public class Category extends DomainEntity {
	
	public Category() {
		super();
		items = new ArrayList<Item>();
	}
	
	// ------------ Attributes ------------ 
	
	private String name;
	private String description;
	private String picture;
	
	// ------------ Relationships attributes ------------ 
	
	private Collection<Item> items;
	

	// ------------ Attributes getters and setters ------------ 
	
	@NotBlank
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@NotBlank
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@URL
	public String getPicture() {
		return picture;
	}

	public void setPicture(String picture) {
		this.picture = picture;
	}
	
	// ------------ Relationships ------------ 

	@Valid
	@OneToMany(mappedBy="category")
	public Collection<Item> getItems() {
		return items;
	}

	public void setItems(Collection<Item> items) {
		this.items = items;
	}

}
