package domain;

import java.util.ArrayList;
import java.util.Collection;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.validation.Valid;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;

import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.URL;

@Entity
@Access(AccessType.PROPERTY)
public class Item extends DomainEntity {
	
	public Item() {
		super();
		tags = new ArrayList<String>();
	}
	
	// ------------ Attributes ------------ 
	
	private String sku;
	private String name;
	private String description;
	private Money price;
	private Collection<String> tags;
	private String picture;
	private boolean deleted;
	private int numSold;
	
	// ------------ Relationships attributes ------------ 
	
	private Tax tax;
	private Category category;
	private Collection<ItemStockInWarehouse> itemStockInWarehouse;
	

	// ------------ Attributes getters and setters ------------ 

	@Column(unique = true)
	@NotBlank
	@Pattern(regexp = "\\w{2}\\-\\w{4}")
	public String getSku() {
		return sku;
	}
	
	public void setSku(String sku) {
		this.sku = sku;
	}

	@NotBlank
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@NotBlank
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Valid
	@NotNull
	public Money getPrice() {
		return price;
	}

	public void setPrice(Money price) {
		this.price = price;
	}

	@ElementCollection
	@NotNull
	public Collection<String> getTags() {
		return tags;
	}

	public void setTags(Collection<String> tags) {
		this.tags = tags;
	}

	@URL
	public String getPicture() {
		return picture;
	}

	public void setPicture(String picture) {
		this.picture = picture;
	}

	public boolean getDeleted() {
		return deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}
	
	
	@Min(0)
	public int getNumSold() {
		return numSold;
	}
	
	public void setNumSold(int numSold) {
		this.numSold = numSold;
	}
	
	// ------------ Relationships ------------ 

	@ManyToOne(optional=false)
	public Tax getTax() {
		return tax;
	}

	public void setTax(Tax tax) {
		this.tax = tax;
	}
	
	@ManyToOne(optional=false)
	public Category getCategory() {
		return category;
	}
	
	public void setCategory(Category category) {
		this.category = category;
	}

	@OneToMany(mappedBy="item")
	public Collection<ItemStockInWarehouse> getItemStockInWarehouse() {
		return itemStockInWarehouse;
	}

	public void setItemStockInWarehouse(Collection<ItemStockInWarehouse> itemStockInWarehouse) {
		this.itemStockInWarehouse = itemStockInWarehouse;
	}
	
}
