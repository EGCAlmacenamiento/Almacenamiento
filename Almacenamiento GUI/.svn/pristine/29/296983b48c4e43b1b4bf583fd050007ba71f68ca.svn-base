package domain;

import java.util.ArrayList;
import java.util.Collection;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Entity;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.validation.Valid;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;

@Entity
@Access(AccessType.PROPERTY)
public class Consumer extends Actor {
	
	public Consumer(){
		super();
		orders = new ArrayList<Order>();
	}
	
	// ------------ Attributes ------------ 
	
	private Money spentMoney;
	private int cancelledOrders;
	private int totalOrders;
	
	// ------------ Relationships attributes ------------ 
	
	private Collection<Order> orders;
	private ShoppingCart shoppingCart;

	// ------------ Attributes getters and setters ------------ 

	@Valid
	@NotNull
	public Money getSpentMoney() {
		return spentMoney;
	}

	public void setSpentMoney(Money spentMoney) {
		this.spentMoney = spentMoney;
	}

	@Min(0)
	public int getCancelledOrders() {
		return cancelledOrders;
	}

	public void setCancelledOrders(int cancelledOrders) {
		this.cancelledOrders = cancelledOrders;
	}
	
	@Min(0)
	public int getTotalOrders() {
		return totalOrders;
	}

	public void setTotalOrders(int totalOrders) {
		this.totalOrders = totalOrders;
	}
	
	// ------------ Relationships ------------ 

	@Valid
	@OneToMany(mappedBy="consumer")
	public Collection<Order> getOrders() {
		return orders;
	}

	public void setOrders(Collection<Order> orders) {
		this.orders = orders;
	}
	
	@Valid
	@OneToOne(optional=false)
	public ShoppingCart getShoppingCart() {
		return shoppingCart;
	}

	public void setShoppingCart(ShoppingCart shoppingCart) {
		this.shoppingCart = shoppingCart;
	}

}
